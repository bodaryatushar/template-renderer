{"version":3,"sources":["App/parser.js","App/util.js","App/app.js","App/index.js","serviceWorker.js","index.js"],"names":["blacklist","sanitizeURL","SafeTransformer","t","types","visitor","path","skip","MemberExpression","node","parent","container","isAssignmentExpression","left","isMemberExpression","isCallExpression","type","optional","Babel","ctx","usingSanitize","template","helpers","addHelper","file","name","tmpl","params","declarations","id","scope","generateUidIdentifier","build","unshiftContainer","push","elementProxy","trapEvent","proxy","trapRef","isVisited","visited","v","includes","jsxMemberObject","Symbol","isReact","isIdentifier","Program","enter","state","exit","this","body","identifier","lastIndex","i","length","isEmptyStatement","isExpressionStatement","returnStatement","expression","replaceWith","program","expressionStatement","arrowFunctionExpression","blockStatement","directive","directiveLiteral","Identifier","loc","computed","property","buildCodeFrameError","isDeclaration","isVariableDeclarator","init","isObjectProperty","key","hasBinding","memberExpression","JSXAttribute","value","callExpression","startsWith","jsxExpressionContainer","sanitizeHTML","sanitize","JSXSpreadAttribute","argument","JSXMemberExpression","object","FunctionDeclaration","some","obj","isTemplateLiteral","quasis","raw","expressions","isLiteral","stringLiteral","defaultOptions","sourceType","presets","plugins","text","allowedTags","defaults","allowedAttributes","img","parse","options","opts","Object","assign","code","func","Function","res","context","React","source","parseSafe","safeOptions","ATTRIBUTES","HTML_ATTRIBUTES","getTemplateParser","str","replace","resFn","result","getExprParser","REACT_COMPONENTS","evaluateObject","val","classes","split","forEach","a","trim","stringToObject","parser","JSON","stringify","temp","item","classNames","templateParser","exprParser","ATTR_EVALUATOR","get","isArray","parsers","map","c","__t","resolveFilter","match","arr","shift","filterName","process","root","processElement","element","undefined","tagName","ele","attrs","childNodes","props","find","filter","style","el","formattedProperty","splitted","slice","word","toUpperCase","join","formatStringToCamelCase","getStyleObject","attrEvals","attr","eval","renderProps","childs","child","children","ChildComponent","content","ReactComponent","ngClasses","showIf","attrEval","evaluate","isEmpty","onClick","defaultValue","href","src","readOnly","dangerouslySetInnerHTML","__html","data","allClasses","concat","className","_props","_component","compName","toLowerCase","createElement","reactComponent","Fragment","err","nodeName","color","parse5","serialize","docFragment","treeAdapters","createDocumentFragment","appendChild","index","findIndex","itemKey","itemsKey","replaceTag","closingTag","tag","useReactParser","useState","setReactComponent","useEffect","newTemplate","parseFragment","parseTemplate","record","console","log","TextInput","onChange","doParse","localStorage","getItem","setItem","spellCheck","e","target","App","setTemplate","setContext","setParse","TemplateComponent","margin","__date","__uppercase","$fmt","getContext","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d798c759.chunk.js","sourcesContent":["/* eslint-disable no-new-func */\nimport React from 'react';\nimport sanitizeHTML from 'sanitize-html';\nimport * as Babel from '@babel/standalone';\n\nconst blacklist = ['eval', 'Function', 'Reflect', 'Proxy'];\nconst sanitizeURL = ['xlinkHref', 'src', 'href', 'action', 'formAction'];\n\nfunction ScopeTransformer({ types: t, template }) {\n  const helpers = [];\n\n  function addHelper(file, name, tmpl, params) {\n    if (file.declarations[name]) return file.declarations[name].id;\n    const id = file.scope.generateUidIdentifier(name);\n    const build = template(tmpl);\n    const node = build({ ...params, name: id });\n    file.declarations[name] = node;\n    file.path.unshiftContainer('body', [node]);\n    helpers.push(name);\n    return id;\n  }\n\n  function validateFunction(file) {\n    return addHelper(\n      file,\n      'checkFunction',\n      `function %%name%%(obj, key) {\n        const value = obj[key];\n        if (value === Function) throw new Error(\"Access to 'Function' is not allowed.\");\n        if (value === React.createElement) throw new Error(\"Access to 'React.createElement' is not allowed.\");\n        if (value === React.createFactory) throw new Error(\"Access to 'React.createFactory' is not allowed.\");\n        if (value === React.cloneElement) throw new Error(\"Access to 'React.cloneElement' is not allowed.\");\n        return typeof value === \"function\" ? value.bind(obj) : value;\n      }`,\n    );\n  }\n\n  function validateURL(file) {\n    return addHelper(\n      file,\n      'checkURL',\n      `function %%name%%(value) {\n        const isJavaScriptProtocol = /^[\\\\u0000-\\\\u001F ]*j[\\\\r\\\\n\\\\t]*a[\\\\r\\\\n\\\\t]*v[\\\\r\\\\n\\\\t]*a[\\\\r\\\\n\\\\t]*s[\\\\r\\\\n\\\\t]*c[\\\\r\\\\n\\\\t]*r[\\\\r\\\\n\\\\t]*i[\\\\r\\\\n\\\\t]*p[\\\\r\\\\n\\\\t]*t[\\\\r\\\\n\\\\t]*\\\\:/i;\n        if (typeof value === 'string' && isJavaScriptProtocol.test(value)) throw new Error(\"javascript: URLs are not allowed.\");\n        return value;\n      }`,\n    );\n  }\n\n  function elementProxy(file) {\n    return addHelper(\n      file,\n      'trapElement',\n      `function %%name%%(element) {\n        const whitelist = [\n          'dir', 'class', 'style', 'draggable', 'value', 'checked', 'selected', 'multiple', 'cols', 'placeholder',\n          'clientTop', 'clientLeft', 'clientWidth', 'clientHeight',\n          'offsetTop', 'offsetLeft', 'offsetWidth', 'offsetHeight',\n          'scrollTop', 'scrollLeft', 'scrollWidth', 'scrollHeight',\n          'focus', 'blur', 'click', 'select', 'setRangeText', 'setSelectionRange', 'scrollIntoView'\n        ];\n        return new Proxy(element || {}, {\n          has(target, name) {\n            return whitelist.includes(name);\n          },\n          get(target, name) {\n            const value = this.has(target, name) ? Reflect.get(target, name) : undefined;\n            return typeof value === 'function' ? value.bind(target) : value;\n          },\n        });\n      }`,\n    );\n  }\n\n  function trapEvent(file) {\n    return addHelper(\n      file,\n      'trapEvent',\n      `function %%name%%(handler) {\n        const elements = ['target', 'currentTarget'];\n        const blacklist = ['nativeEvent'];\n        return function (event) {\n          const e = new Proxy(event, {\n            has(target, name) {\n              return !blacklist.includes(name) && Reflect.has(target, name);\n            },\n            get(target, name) {\n              if (blacklist.includes(name)) return undefined;\n              const value = Reflect.get(target, name);\n              return elements.includes(name) ? %%proxy%%(value) : typeof value === 'function' ? value.bind(target) : value;\n            },\n          });\n          return handler(e);\n        }\n      }`,\n      {\n        proxy: elementProxy(file),\n      },\n    );\n  }\n\n  function trapRef(file) {\n    return addHelper(\n      file,\n      'trapRef',\n      `function %%name%%(ref) {\n        return typeof ref === 'function'\n          ? element => ref(%%proxy%%(element))\n          : element => {\n              ref.current = element ? %%proxy%%(element) : null;\n              return ref;\n            };\n      }`,\n      {\n        proxy: elementProxy(file),\n      },\n    );\n  }\n\n  function trapProps(file) {\n    return addHelper(\n      file,\n      'trapProps',\n      `function %%name%%(props) {\n        if (props) {\n          for (let name in props) {\n            const value = props[name];\n            if (name.startsWith('on')) props[name] = %%trapEvent%%(props[name]);\n            if (name === 'ref') props[name] = %%trapRef%%(props[name]);\n          }\n        }\n        return props;\n      }`,\n      {\n        trapEvent: trapEvent(file),\n        trapRef: trapRef(file),\n      },\n    );\n  }\n\n  function sanitize(file) {\n    return addHelper(\n      file,\n      'sanitize',\n      `function %%name%%(markup) {\n        return markup && markup.__html\n          ? { __html: %%sanitizeHTML%%(markup.__html) }\n          : markup;\n      }`,\n      {\n        sanitizeHTML: (usingSanitize = file.scope.generateUidIdentifier('sanitizeHTML')),\n      },\n    );\n  }\n\n  let ctx;\n  let usingSanitize;\n\n  let isVisited = (() => {\n    let visited = [];\n    return v => {\n      if (visited.includes(v)) return true;\n      visited.push(v);\n    };\n  })();\n\n  const jsxMemberObject = Symbol();\n  const isReact = node => t.isIdentifier(node) && node.name === 'React';\n\n  return {\n    visitor: {\n      Program: {\n        enter(path, state) {\n          ctx = state.file.scope.generateUidIdentifier('ctx');\n          usingSanitize = false;\n        },\n\n        exit(path, state) {\n          if (isVisited(this)) return;\n          const { body } = path.node;\n          const params = [ctx, t.identifier('React')];\n\n          if (usingSanitize) {\n            params.push(usingSanitize);\n          }\n\n          let lastIndex = -1;\n          for (let i = body.length - 1; i >= 0; i--) {\n            if (t.isEmptyStatement(body[i])) continue;\n            if (t.isExpressionStatement(body[i])) {\n              lastIndex = i;\n              break;\n            }\n          }\n\n          if (lastIndex > -1) {\n            body[lastIndex] = t.returnStatement(body[lastIndex].expression);\n          }\n\n          path.replaceWith(\n            t.program([\n              t.expressionStatement(\n                t.arrowFunctionExpression(\n                  params,\n                  t.blockStatement(body, [t.directive(t.directiveLiteral('use strict'))]),\n                ),\n              ),\n            ]),\n          );\n        },\n      },\n      Identifier(path) {\n        const { node, parent, scope } = path;\n        if (!node.loc) return;\n        if (blacklist.includes(node.name) && (parent.computed || parent.property !== node)) {\n          throw path.buildCodeFrameError(`Access to '${node.name}' is not allowed.`);\n        }\n\n        if (isReact(node)) {\n          // do not allow re-declaring `React`\n          if (t.isDeclaration(parent) || (t.isVariableDeclarator(parent) && parent.init !== node)) {\n            throw path.buildCodeFrameError(`Declaring 'React' is not allowed.`);\n          }\n          return;\n        }\n\n        if (t.isObjectProperty(parent) && parent.key === node) return;\n        if (t.isMemberExpression(parent) && !parent.computed) return;\n        if (scope.hasBinding(node.name)) return;\n        path.replaceWith(t.memberExpression(ctx, node));\n      },\n      JSXAttribute(path, state) {\n        const { node } = path;\n        const { name, value } = node;\n        if (sanitizeURL.includes(name.name)) {\n          node.value = t.callExpression(validateURL(state.file), [value.expression || value]);\n        }\n        if (name.name.startsWith('on')) {\n          node.value = t.jsxExpressionContainer(\n            t.callExpression(trapEvent(state.file), [value.expression]),\n          );\n        }\n        if (name.name === 'ref') {\n          node.value = t.jsxExpressionContainer(\n            t.callExpression(trapRef(state.file), [value.expression]),\n          );\n        }\n        if (name.name === 'dangerouslySetInnerHTML') {\n          node.value = t.jsxExpressionContainer(\n            t.callExpression(sanitize(state.file), [value.expression]),\n          );\n        }\n      },\n      JSXSpreadAttribute(path, state) {\n        const { node } = path;\n        node.argument = t.callExpression(trapProps(state.file), [node.argument]);\n      },\n      JSXMemberExpression(path, state) {\n        const { node } = path;\n        node.object[jsxMemberObject] = true;\n      },\n      FunctionDeclaration(path, state) {\n        if (helpers.some(name => state.file.declarations[name] === path.node)) {\n          path.skip();\n        }\n      },\n      MemberExpression(path, state) {\n        const { node, scope } = path;\n        const obj =\n          node.object.name && !isReact(node.object) && !scope.hasBinding(node.object.name)\n            ? t.memberExpression(ctx, node.object)\n            : node.object;\n\n        const name =\n          t.isTemplateLiteral(node.property) && node.property.quasis.length === 1\n            ? node.property.quasis[0].value.raw\n            : node.property.name || node.property.value;\n\n        const isCreateElement = () =>\n          node.loc && ['createElement', 'createFactory', 'cloneElement'].includes(name);\n        const isConstructor = () => name === 'constructor';\n\n        // don't allow access to 'constructor' and `React.createElement` methods\n        if (\n          !t.isAssignmentExpression(path.container) &&\n          (isConstructor() ||\n            isCreateElement() ||\n            (t.isTemplateLiteral(node.property) && node.property.expressions.length) ||\n            (node.computed && (t.isIdentifier(node.property) || !t.isLiteral(node.property))))\n        ) {\n          path.replaceWith(\n            t.callExpression(validateFunction(state.file), [\n              obj,\n              t.isIdentifier(node.property) && !node.computed\n                ? t.stringLiteral(node.property.name)\n                : node.property,\n            ]),\n          );\n        } else if ((node.loc || node.object[jsxMemberObject]) && obj !== node.object) {\n          path.replaceWith(t.memberExpression(obj, node.property, node.computed));\n        }\n      },\n    },\n  };\n}\n\nfunction SafeTransformer({ types: t }) {\n  return {\n    visitor: {\n      'OptionalCallExpression|OptionalMemberExpression'(path) {\n        // don't transform optional chaining\n        path.skip();\n      },\n      MemberExpression(path) {\n        const { node, parent, container } = path;\n\n        // don't transform left-hand side\n        if (t.isAssignmentExpression(parent) && parent.left === node) {\n          path.skip();\n          return;\n        }\n\n        if (t.isMemberExpression(container) || t.isCallExpression(container)) {\n          container.type = `Optional${container.type}`;\n        }\n\n        node.optional = true;\n        node.type = `Optional${node.type}`;\n      },\n    },\n  };\n}\n\nBabel.registerPlugin('ScopeTransformer', ScopeTransformer);\n\nconst defaultOptions = {\n  sourceType: 'script',\n  presets: ['es2015', 'react'],\n  plugins: ['proposal-optional-chaining', 'ScopeTransformer'],\n};\n\nfunction sanitize(text) {\n  return sanitizeHTML(text, {\n    allowedTags: [...sanitizeHTML.defaults.allowedTags, 'img'],\n    allowedAttributes: {\n      ...sanitizeHTML.defaults.allowedAttributes,\n      img: ['alt', 'src', 'srcset', 'sizes'],\n    },\n  });\n}\n\nexport function parse(text, options = {}) {\n  const opts = Object.assign({}, defaultOptions, options);\n  const code = Babel.transform(text, opts).code;\n  const func = new Function(`return ${code}`)();\n  const res = context => func(context, React, sanitize);\n\n  // store source and transform code for debug\n  res.source = text;\n  res.code = code;\n\n  return res;\n}\n\nexport function parseSafe(text, options = {}) {\n  const safeOptions = {\n    sourceType: 'script',\n    plugins: [SafeTransformer, 'proposal-optional-chaining', 'syntax-jsx'],\n  };\n  const code = Babel.transform(text, safeOptions).code;\n  return parse(code, options);\n}\n\nfunction error(message, source, e) {\n  console.error(`${message}\n\n${source.trim()}\n\n${e.message.trim()}\n`);\n}\n\nconst CACHE = {};\n\nexport function useTemplate(template = '', isTest = false) {\n  const fn = (() => {\n    try {\n      return (\n        CACHE[template] ||\n        (CACHE[template] = parseSafe(\n          template.trim().startsWith('<>') || isTest ? template : `<p>Record: {record.id}</p>`,\n        ))\n      );\n    } catch (e) {\n      error(`Error parsing template:`, template, e);\n      return () => null;\n    }\n  })();\n\n  const Comp = React.useMemo(\n    () => ({ context }) => {\n      try {\n        const res = fn(context);\n        return res === void 0 ? null : res;\n      } catch (e) {\n        error(`Error rendering template:`, template, e);\n        return null;\n      }\n    },\n    [fn, template],\n  );\n\n  Comp.code = fn.code;\n  Comp.source = fn.source;\n\n  return Comp;\n}\n","import { parseSafe } from \"./parser\";\n\nexport const ATTRIBUTES = {\n  repeat: \"ng-repeat\",\n  if: \"ng-if\",\n  show: \"ng-show\",\n  click: \"ng-click\",\n  bind: \"ng-bind\",\n  href: \"ng-href\",\n  src: \"ng-src\",\n  readonly: \"ng-readonly\",\n  class: \"ng-class\",\n  bindHTML: \"ng-bind-html\",\n  translate: \"x-translate\",\n};\n\nexport const HTML_ATTRIBUTES = {\n  href: \"href\",\n  src: \"src\",\n  class: \"class\",\n  style: \"style\",\n  data: \"data\",\n};\n\nconst getFn = (...params) => new Function(...params); // eslint-disable-line\n\nexport const getTemplateParser = str => {\n  const text1 = str.replace(/(?!(\\$|\\\\))\\{{/g, \"$1${\");\n  const text = text1.replace(/(?!(\\$|\\\\))\\}}/g, \"}\");\n\n  if (!text.includes(\"${\")) {\n    return () => text;\n  }\n\n  const resFn = parseSafe(\"`\" + text + \"`\");\n  return (...args) => {\n    const result = resFn(...args);\n    return result.replace(/undefined/g, \"\").replace(/null/g,\"\");\n  };\n};\n\nexport const getExprParser = str => {\n  return parseSafe(str);\n};\n\nexport const isObject = v => v.startsWith(\"{\");\nexport const isArray = v => v.startsWith(\"[\");\n\nconst formatStringToCamelCase = str => {\n  const splitted = str.split(\"-\");\n  if (splitted.length === 1) return splitted[0];\n  return (\n    splitted[0] +\n    splitted\n      .slice(1)\n      .map(word => word[0].toUpperCase() + word.slice(1))\n      .join(\"\")\n  );\n};\n\nexport const getStyleObject = str => {\n  const style = {};\n  str.split(\";\").forEach(el => {\n    const [property, value] = el.split(\":\");\n    if (!property) return;\n\n    const formattedProperty = formatStringToCamelCase(property.trim());\n    style[formattedProperty] = value.trim().replace(\"!important\", \"\");\n  });\n\n  return style;\n};\n\nexport const stringToObject = str => {\n  let classes = {};\n  const arr = str\n    .replace(\"{\", \"\")\n    .replace(\"}\", \"\")\n    .split(\",\");\n  arr.forEach(a => {\n    const [code, value] = a.split(\":\");\n    classes[code.trim()] = \"{{\" + value + \"}}\";\n  });\n  return classes;\n};\n","import React from \"react\";\nimport parse5 from \"parse5\";\nimport treeAdapters from 'parse5/lib/tree-adapters/default'\nimport { get, isEmpty } from \"lodash\";\nimport { ATTRIBUTES, HTML_ATTRIBUTES } from \"./util\";\nimport { getTemplateParser, getExprParser, getStyleObject,isObject,isArray,stringToObject } from \"./util\";\nimport classNames from \"classnames\";\n\nconst REACT_COMPONENTS = [];\n\nfunction reactComponent(element, _props = {}, _component) {\n  const { tagName } = element;\n  const props = Object.assign({}, _props);\n  const compName = _component || tagName.toLowerCase();\n  return React.createElement(compName, props);\n}\n\nfunction evaluateObject(val) {\n let classes = stringToObject(val)\n      const parser = getTemplateParser(JSON.stringify(classes));\n      return context => {\n        const result = parser(context);\n        classes = JSON.parse(result)\n        let temp = {}\n        for (const item in classes) {\n          const name = item.replace('\\'','').replace('\\'','')\n          temp[name] = classes[item] === \"true\" ? true : false\n        }\n        return classNames(temp);\n      };\n}\n\nfunction templateParser(val) {\n  const parser = getTemplateParser(val);\n  return context => {\n    return parser(context);\n  };\n}\n\nfunction exprParser(val) {\n  const parser = getExprParser(val);\n  return context => {\n    return parser(context);\n  };\n}\nexport const ATTR_EVALUATOR = {\n  [ATTRIBUTES.if]: val => {\n    return exprParser(val)\n  },\n  [ATTRIBUTES.show]: val => {\n    const parser = getExprParser(val);\n    return context => {\n      const show = parser(context);\n      if (!show) return \"hide\";\n      else return \"\";\n    };\n  },\n  [ATTRIBUTES.click]: val => {\n    return context => val;\n  },\n  [ATTRIBUTES.bind]: val => {\n    return context => {\n      const value = get(context, val);\n      return value;\n    };\n  },\n  [ATTRIBUTES.href]: val => {\n    return templateParser(val)\n  },\n  [ATTRIBUTES.src]: val => {\n    return templateParser(val)\n  },\n  [ATTRIBUTES.readonly]: val => {\n    return exprParser(val)\n  },\n  [ATTRIBUTES.class]: val => {\n    const value = val && val.trim(); \n    if(isObject(value)) {\n      return evaluateObject(value)\n    } else if(isArray(value)) {\n      const classes = value.replace('[','').replace(']','').split(',');\n      const parsers = classes.map(c => {\n        return () => c\n      })\n      return context => {\n        return parsers.map(parser => parser(context));\n    }\n  }\n    return templateParser(val)\n  },\n  [ATTRIBUTES.bindHTML]: val => {\n    return exprParser(val)\n  },\n  [HTML_ATTRIBUTES.href]: val => {\n    return templateParser(val)\n  },\n  [HTML_ATTRIBUTES.src]: val => {\n    return templateParser(val)\n  },\n  [HTML_ATTRIBUTES.data]: val => {\n    return templateParser(val)\n  },\n  [ATTRIBUTES.translate]: val => {\n    const parser = getTemplateParser(val);\n    return context => {\n      const value = parser(context);\n      return context.__t(`${value}`);\n    };\n  },\n};\n\nfunction resolveFilter(match) {\n  let arr = match\n    .replace(\"{{\", \"\")\n    .replace(\"}}\", \"\")\n    .split(\"|\");\n  let code = arr.shift();\n  arr.forEach(a => {\n    let [filterName, value] = a.split(\":\");\n    if (value) {\n      code = `__${filterName.trim()}(${code},${value})`;\n    } else {\n      code = `__${filterName.trim()}(${code})`;\n    }\n  });\n  return \"{{\" + code + \"}}\";\n}\n\nfunction process(root) {\n  function processElement(element) {\n    if (element === undefined) return;\n    const { value = \"\", tagName, element: ele } = element;\n    let { attrs = [], childNodes } = element\n    let props = {};\n    let classes = [];\n\n    // for  x-translate\n    attrs = attrs.map(a => {\n      if(a.name === ATTRIBUTES.translate) {\n        let value = childNodes.find(c => c.value)\n        childNodes = childNodes.map(c => c.value ? '' : c).filter(c => c !== '')\n        return {name: a.name, value: value.value}\n      }\n      return a;\n    })\n\n    const remainingAttr = attrs.filter(\n      ({ name }) => !ATTR_EVALUATOR[name]\n    );\n    remainingAttr.forEach(({ name, value }) => {\n      if (name === HTML_ATTRIBUTES.class) {\n        classes.push(value);\n      } else if (name === HTML_ATTRIBUTES.style) {\n        props[name] = getStyleObject(value);\n      } else {\n        props[name] = value;\n      }\n    });\n\n    const attrEvals = attrs\n      .filter(({ name }) => ATTR_EVALUATOR[name])\n      .map(({ name, value }) => ({\n        attr: name,\n        eval: ATTR_EVALUATOR[name](value)\n      }));\n\n    let renderProps = () => ({});\n\n    if (childNodes && childNodes.length) {\n      const childs = [];\n      for (let i = 0; i < childNodes.length; i++) {\n        const child = processElement(childNodes[i]);\n        child && childs.push(child);\n      }\n\n      renderProps = context => ({\n        children: childs.map((ChildComponent, i) => (\n          <ChildComponent key={i} context={context} />\n        ))\n      });\n    } else {\n      const content = value;\n      let code = content.replace(/\\{\\{(.*?)\\}\\}/g, resolveFilter);\n      const parser = content ? getTemplateParser(code) : null;\n      renderProps = context => (parser ? { children: parser(context) } : {});\n    }\n\n    const ReactComponent = (() => {\n      function HTMLComponent({ context }) {\n        try {\n          let ngClasses = [];\n        let showIf = true;\n\n        attrEvals.forEach(attrEval => {\n          const { attr, eval: evaluate } = attrEval;\n          let result = \"\";\n          if (!isEmpty(context)) {\n            result = evaluate(context);\n          }\n          if (attr === ATTRIBUTES.if && (showIf = result) === false) {\n            return;\n          } else if (attr === ATTRIBUTES.show) {\n            ngClasses.push(result);\n          } else if (attr === ATTRIBUTES.click) {\n            props.onClick = () => result;\n          } else if (attr === ATTRIBUTES.bind) {\n            if (tagName === \"input\") {\n              props.defaultValue = result;\n            } else {\n              props.children = result;\n            }\n          } else if (attr === ATTRIBUTES.href || attr === HTML_ATTRIBUTES.href) {\n            props.href = result;\n          } else if (attr === ATTRIBUTES.src || attr === HTML_ATTRIBUTES.src) {\n            props.src = result;\n          } else if (attr === ATTRIBUTES.readonly) {\n            props.readOnly = result;\n          } else if (attr === ATTRIBUTES.class) {\n            ngClasses.push(result);\n          } else if(attr === ATTRIBUTES.bindHTML) {\n              props.dangerouslySetInnerHTML = { __html: result };\n          } else if(attr === HTML_ATTRIBUTES.data) {\n            props.data = result;\n          } else if(attr === ATTRIBUTES.translate) {\n            props.children = result\n          }\n        });\n        let allClasses = (classes.concat(ngClasses))\n        if (allClasses.length > 0) {\n          props.className = classNames(allClasses.filter(c => c !== ''));\n        }\n        return showIf\n          ? reactComponent(\n              element,\n              { ...renderProps(context), ...props },\n              (REACT_COMPONENTS.includes(tagName) || !tagName) && React.Fragment\n            )\n          : null;\n        } catch(err) {\n          if(ele.nodeName === '#document-fragment') {\n            return <div style={{color: 'red'}}>{parse5.serialize(ele)}</div>\n          } else {\n            const docFragment = treeAdapters.createDocumentFragment();\n            treeAdapters.appendChild(docFragment, ele);\n            return <div style={{color: 'red'}}>{parse5.serialize(docFragment)}</div>\n          }\n        }\n          \n      }\n      return HTMLComponent;\n    })();\n\n    // for ng-repeat\n    const index = attrs && attrs.findIndex(a => a.name === ATTRIBUTES.repeat);\n    if (index >= 0) {\n      const [, itemKey, itemsKey, , key] = attrs[index].value.match(\n        /([^\\s]+)\\s+in\\s+([^\\s]+)(\\s+track\\s+by\\s+([^\\s]+))?/\n      );\n      function List({ context }) {\n        const data = get(context, itemsKey, []);\n        return (\n          <React.Fragment>\n            {data.map((item, i) => (\n              <ReactComponent\n                key={key ? item[key] : i}\n                context={{\n                  ...context,\n                  [itemKey]: item,\n                  $index: i\n                }}\n              />\n            ))}\n          </React.Fragment>\n        );\n      }\n      return List;\n    }\n    return ReactComponent;\n  }\n  return processElement(root);\n}\n\nfunction generateTree(root) {\n  function processElement(element) {\n    const { value, tagName, attrs, childNodes = [] } = element;\n    if (value === \"\\n\") return;\n    if(value) return { value }\n    return {\n      tagName,\n      attrs,\n      childNodes: childNodes.map(c => processElement(c)).filter(c => c),\n      element, \n    };\n  }\n  return processElement(root);\n}\n\nfunction replaceTag(str){\n  let closingTag = '',tag = ''\n  const arr = str.split(' ')[0].match(/<([^/>]+)\\/>/g)\n  if(arr) {\n    closingTag = arr[0]\n  } else {\n    tag = str.replace(/\\/>/g,'>')\n    closingTag = str.split(' ')[0].replace(/</g,'</') + '>';\n  }\n  return tag + closingTag;\n}\n\nfunction parseTemplate(template) {\n    const newTemplate = template.replace(/<([^/>]+)\\/>/g, replaceTag);\n    const { childNodes = [] } = parse5.parseFragment(newTemplate);\n    const tree = generateTree({\n      tagName: \"\",\n      attrs: [],\n      childNodes\n    });\n    return process(tree);\n}\n\nexport function useReactParser(template) {\n  const [ReactComponent, setReactComponent] = React.useState(() => () => null);\n  React.useEffect(() => {\n    if (template) {\n      try {\n        const result = parseTemplate(template.trim());\n        setReactComponent(() => result);\n      } catch (err) {\n        setReactComponent(\n          () =>\n            function({ context = {} }) {\n              return (\n                <div>\n                  {\" \"}\n                  <h4> Record: {context.record.id} </h4>{\" \"}\n                </div>\n              );\n            }\n        );\n        console.log(\"template parse\", err);\n      }\n    }\n  }, [template]);\n  return ReactComponent;\n}\n","import React from \"react\";\nimport { useReactParser } from \"./app\";\nimport \"./index.css\";\n\nfunction App() {\n  const [template, setTemplate] = React.useState(\"\");\n  const [context, setContext] = React.useState(\"\");\n  const [parse, setParse] = React.useState(false);\n  const TemplateComponent = useReactParser(template);\n\n  function getContext() {\n    try {\n      const ctx = JSON.parse(context);\n      return { ...ctx, __date: e => e, __uppercase: e => e.toUpperCase(), __t: e => e,$fmt: key => {\n        const value = ctx[key];\n        if (value === undefined || value === null) {\n        return '';\n        }\n        return value;\n        }};\n    } catch (e) {\n      return {};\n    }\n  }\n\n  function doParse() {\n    setParse(true);\n  }\n\n  return (\n    <div className=\"flex\">\n      <div>\n        <label>Template: </label>\n        <TextInput\n          name=\"template\"\n          value={template}\n          onChange={setTemplate}\n          doParse={setParse}\n        />\n        Context:{\" \"}\n        <TextInput\n          name=\"context\"\n          value={context}\n          onChange={setContext}\n          doParse={setParse}\n        />\n        <button onClick={() => doParse()}>Parse</button>\n      </div>\n      <div style={{ margin: \"0px 10px   0px 10px\" }}>\n        Output :\n        <div style={{ margin: \"0px 10px 0px 20px\" }}>\n          {parse && <TemplateComponent context={getContext()} />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction TextInput({ name, value, onChange, doParse }) {\n  React.useEffect(() => {\n    onChange(localStorage.getItem(name) || \"\");\n  }, [name, onChange]);\n\n  React.useEffect(() => {\n    localStorage.setItem(name, value);\n  }, [name, value]);\n\n  function handleChange(e) {\n    doParse(false);\n    onChange(e.target.value);\n  }\n  return <textarea spellCheck=\"false\" value={value} onChange={handleChange} />;\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}